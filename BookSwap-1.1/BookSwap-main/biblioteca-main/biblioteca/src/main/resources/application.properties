spring.application.name=biblioteca

# Configurações do DataSource (MySQL Local)
# ALTERE ESTAS LINHAS:
spring.datasource.url=jdbc:mysql://localhost:3306/biblioteca?serverTimezone=UTC&createDatabaseIfNotExist=true
# - localhost:3306 : Se o MySQL estiver rodando na sua máquina local na porta padrão.
# - nome_do_seu_banco_local: Substitua pelo nome do banco de dados que você criou (ex: biblioteca_local).
# - createDatabaseIfNotExist=true : Opcional. Se o banco não existir, tentará criá-lo. Remova se não quiser ou não tiver permissão.

spring.datasource.username=root
# - seu_usuario_mysql_local: Substitua pelo nome de usuário do seu MySQL local (ex: root, ou um usuário que você criou).

spring.datasource.password=toor
# - sua_senha_mysql_local: Substitua pela senha do usuário acima. Se for o root e não tiver senha (não recomendado), deixe em branco, mas o ideal é ter senha.

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
  # Esta linha geralmente permanece a mesma

# Configuração do JPA (Java Persistence API)
spring.jpa.hibernate.ddl-auto=update
# - update: Tentará criar/atualizar as tabelas no seu banco local com base nas suas entidades.
#   Isso é útil para desenvolvimento local. Para o primeiro uso com um banco vazio, 'create' também funcionaria,
#   mas 'update' é mais seguro se você já tiver dados e fizer alterações nas entidades.

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
  # Ou MySQLDialect se seu MySQL local for versão 5.x

# Configuração para mostrar as queries SQL (útil para debug)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configurações do HikariCP (Pool de Conexões) - PARA MYSQL LOCAL
# Com MySQL local, os timeouts agressivos de provedores DBaaS geralmente não são um problema.
# Você pode começar com os padrões do Hikari ou usar valores mais relaxados.
# O wait_timeout padrão do MySQL local costuma ser 8 horas (28800 segundos).
spring.datasource.hikari.connection-timeout=30000
  # 30 segundos
spring.datasource.hikari.idle-timeout=600000
  # 10 minutos
spring.datasource.hikari.max-lifetime=1800000
  # 30 minutos (padrão Hikari, geralmente OK com wait_timeout padrão do MySQL local)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
  # Manter pelo menos 2 conexões ociosas
spring.datasource.hikari.pool-name=BibliotecaHikariPoolLocal
# spring.datasource.hikari.connection-test-query=SELECT 1 # Geralmente não necessário para MySQL local padrão
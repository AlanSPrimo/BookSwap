spring.application.name=biblioteca
# spring.application.name define o nome da sua aplicação Spring Boot como "biblioteca".
# Este nome é usado para identificação em logs, métricas e outros contextos.

# Configurações do DataSource (MySQL)
spring.datasource.url=jdbc:mysql://db_bookswap.mysql.dbaas.com.br:3306/db_bookswap?serverTimezone=UTC
# spring.datasource.url define a URL de conexão JDBC para o seu banco de dados MySQL.
# - jdbc:mysql:// indica que a conexão é para um banco de dados MySQL usando o driver JDBC.
# - db_bookswap.mysql.dbaas.com.br é o endereço do host do servidor MySQL.
# - :3306 é a porta padrão do MySQL.
# - /db_bookswap é o nome do banco de dados ao qual você deseja se conectar.
# - ?serverTimezone=UTC é um parâmetro de conexão que define o timezone do servidor como UTC
#   para evitar problemas de timezone entre a aplicação e o banco de dados.
spring.datasource.username=db_bookswap
# spring.datasource.username define o nome de usuário para autenticar no servidor MySQL.
spring.datasource.password=b00ks@aP
# spring.datasource.password define a senha para o usuário especificado em spring.datasource.username.
# Em produção, é importante proteger esta senha.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.driver-class-name especifica a classe do driver JDBC que o Spring Boot
# usará para se comunicar com o banco de dados MySQL (versão 8 ou superior).

# Configuração do JPA (Java Persistence API)
spring.jpa.hibernate.ddl-auto=update
# spring.jpa.hibernate.ddl-auto controla a ação do Hibernate no esquema do banco de dados
# na inicialização da aplicação.
# - update: tenta atualizar o esquema do banco de dados para corresponder às entidades JPA.
#   Cria tabelas se não existirem e tenta alterar as existentes. Em produção, é geralmente
#   recomendado usar uma estratégia mais controlada como 'validate' ou ferramentas de
#   migração de banco de dados.

# 'update' cria/atualiza as tabelas com base nas entidades
# Este é um comentário explicando o valor 'update' da propriedade anterior.
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.database-platform especifica o dialeto do Hibernate a ser usado para o MySQL versão 8.
# O dialeto permite que o Hibernate gere SQL otimizado para o banco de dados específico.

# Configuração para mostrar as queries SQL
spring.jpa.show-sql=true
# spring.jpa.show-sql define se o Hibernate deve logar as queries SQL que ele executa.
# Definir como 'true' é útil durante o desenvolvimento para depuração, mas geralmente
# deve ser 'false' em produção para evitar logs excessivos.
spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.format_sql define se o Hibernate deve formatar as
# queries SQL nos logs, tornando-as mais legíveis. Esta propriedade só tem efeito se
# spring.jpa.show-sql estiver definido como 'true'.